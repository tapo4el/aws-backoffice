
service: import-service-api
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  profile: default
  stage: dev
  environment:
      SQS_URL: ${env:SQS_URL}
  httpApi:
    cors:
      allowedOrigins:
        - https://d3daouilse61ba.cloudfront.net
      allowedMethods:
        - GET
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 's3:ListBucket'
      Resource: 'arn:aws:s3:::import-service-storage'
    - Effect: Allow
      Action:
        - 's3:*'
      Resource: 'arn:aws:s3:::import-service-storage/*'
    - Effect: Allow
      Action:
        - 'sqs:*'
      Resource: 'arn:aws:sqs:us-east-1:735574760852:catalogItemsQueue'

functions:
  importProductsFile:
    handler: functions/importProductsFile.importProductsFile
    events:
      - http:
          path: /import
          method: GET
          cors: true
          authorizer:
            name: basicAuthorizer
            resultTtlInSeconds: 0
            arn: 'arn:aws:lambda:us-east-1:735574760852:function:authorization-service-dev-basicAuthorizer'
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: functions/importFileParser.importFileParser
    events:
      - s3:
          bucket: import-service-storage
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    GatewayResponseAuth:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'https://d3daouilse61ba.cloudfront.net'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,DELETE,POST'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi
